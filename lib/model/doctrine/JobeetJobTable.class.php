<?php

/**
 * JobeetJobTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class JobeetJobTable extends Doctrine_Table
{
    /**
     * @var array
     */
    public static $types = [
        'full-time' => 'Full time',
        'part-time' => 'Part time',
        'freelance' => 'Freelance',
    ];

    /**
     * @return array
     */
    public function getTypes()
    {
        return self::$types;
    }

    /**
     * Returns an instance of this class.
     *
     * @return object JobeetJobTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('JobeetJob');
    }

    /**
     * Handles request.
     *
     * @param Doctrine_Query $q
     * @return JobeetJob
     */
    public function retrieveActiveJob(Doctrine_Query $q)
    {
        return $this->addActiveJobsQuery($q)->fetchOne();
    }

    /**
     * Returns collection of active jobs.
     *
     * @param Doctrine_Query|null $q
     * @return Doctrine_Collection
     * @throws Doctrine_Query_Exception
     */
    public function getActiveJobs(Doctrine_Query $q = null)
    {
        return $this->addActiveJobsQuery($q)->execute();
    }

    /**
     * Returns active jobs count.
     *
     * @param Doctrine_Query|null $q
     * @return mixed
     */
    public function countActiveJobs(Doctrine_Query $q = null)
    {
        return $this->addActiveJobsQuery($q)->count();
    }

    /**
     * Prepare query for getting active jobs.
     *
     * @param Doctrine_Query|null $q
     * @return Doctrine_Query
     */
    public function addActiveJobsQuery(Doctrine_Query $q = null)
    {
        if (null === $q) {
            $q = $this->createQuery('j');
        }

        $alias = $q->getRootAlias();

        $q->andWhere($alias . '.expires_at > ?', date('Y-m-d h:i:s', time()))
            ->andWhere($alias . '.is_activated = ?', 1)
            ->addOrderBy($alias . '.expires_at DESC');

        return $q;
    }

    /**
     * Cleanup old not activated jobs.
     *
     * @param int $days
     * @return Doctrine_Collection
     * @throws Doctrine_Query_Exception
     */
    public function cleanup($days)
    {
        return $this->createQuery('a')
            ->delete()
            ->andWhere('a.is_activated = ?', 0)
            ->andWhere('a.created_at < ?', date('Y-m-d', time() - 86400 * $days))
            ->execute();
    }
}